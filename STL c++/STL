


//********************* pair
   pair<int,int> p={4,2};
   cout<< p.first<<" "<< p.second; //output-->{4,2}
   
   //pair in pair
   pair<int ,pair<int,int>> p1={1,{2,3}};
   cout<<p1.first<<" "<<p1.second.first<<" "<<p1.second.second; //output {1,{2,3}}




 //*************push in the vector
    vector<int> v;
    v.push_back(1);
    v.emplace_back(2);
    
//push pair in vector 
    vector<pair<int, int>> vec;  // Correct declaration
    vec.emplace_back(1, 2);    //  emplace_back
    vec.push_back({3,2});     //push_back


    
    //******Note emplace_back is faster than push_back
    
    
    //push the single number for multiple time in the vector
    vector<int>v1(5,100);



   vector<int>v2(v1); //copy the vector v1 into the vector v2




      for (auto it = v1.begin(); it != v1.end(); it++) {
         cout << *it << " ";
         }   //Iiteration


 cout << endl;

    for (int i = 0; i < v.size(); i++) {
        cout << v[i] << " ";
    }
    cout << endl;

    for (int i = 0; i < vec.size(); i++) {
        cout << "(" << vec[i].first << ", " << vec[i].second << ") ";
    }
    cout << endl;
     for (int j = 0; j < v1.size(); j++) {
        cout << v1[j] << " ";
    }
    
    cout << endl;
     for (int j = 0; j < v2.size(); j++) {
        cout << v2[j] << " ";
    }

//***************methods in the vector

vector<int> v = {1, 2, 3, 4, 5, 6};

//print the last element in the vector
    cout<<v.back()<<" ";   // print 6

    // Use iterator to point to the last element
    vector<int>::iterator it = v.end() - 1;
    cout << *it << " ";  // This will print 6
    
     // Use iterator to point to the first element
    vector<int>::iterator it2 = v.begin();
    cout << *it2 << " ";  // This will print 1

//the iteration will be in reverse patten 
    vector<int>::reverse_iterator it3 = v.rend()-1;
    cout << *it3 << " ";  // This will print 1

//the iteration will be in reverse patten 
    vector<int>::reverse_iterator it4 = v.rbegin();
    cout << *it4 << " ";  // This will print 6


// Iterate through the vector in reverse
    for (vector<int>::reverse_iterator it5 = v.rbegin(); it5 != v.rend(); ++it5) {
        cout << *it5 << " ";  // Prints 6 5 4 3 2 1
    }
    
    
    // Iterate through the vector 
    for (vector<int>::iterator it6 = v.begin(); it6 != v.end(); ++it6) {
        cout << *it6 << " ";  // Prints 1 2 3 4 5 6
    }


// On the place of vector<int>::iterator we can write auto 

for (auto it7 = v.begin(); it7 != v.end(); ++it7) {
        cout << *it7 << " ";  // Prints 1 2 3 4 5 6
    }



//***************Erase in vector

  vector<int> v = {1, 2, 3, 4, 5, 6};

   v.erase(v.begin()+1); // deleting 2 element in the vector that is (2)
   
   v.erase(v.begin()+2,v.begin()+4); //in this range is given to delete the element in the vector
   


/**************//Inseration in the vector
    
    vector<int>v(2,100); //{100,100}
    
    v.insert(v.begin(),300);//{300,100,100}
    
    v.insert(v.begin()+1,2,10);//{300,10,10,100,100}
    
    vector<int>copy(2,50);//{50,50}
    
    v.insert(v.begin(),copy.begin(),copy.end());//{50,50,300,10,10,100,100}
    
    vector<int>v={1,2,3,4,5,6};
    
  cout<<v.size(); //tell the size of the vector
    
  v.pop_back(); //Remove the last element in the vector
    
  vector<int>v1={1,2};
  vector<int>v2={3,4};
  
  v1.swap(v2); //v1-->{3,4} v2-->{1,2}

  v1.clear(); //delete all the elment in the vector
  
  cout<<v2.empty();//It tells you that vector is empty or not (0 OR 1)



//***************** List


    list<int> ls;
    ls.push_back(2);//{2}
    ls.emplace_back(3);//{2,3}
    ls.push_front(5);//{5,2,3}
    ls.emplace_front(6);//{6,5,2,3}


//rest functions same as vector
//begin,end,rbegin,rend,clear,insert,size,swap......



    
