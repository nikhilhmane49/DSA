

02_reverse_words_in_a_string


Given an input string s, reverse the order of the words.

A word is defined as a sequence of non-space characters. The words in s will be separated by at least one space.

Return a string of the words in reverse order concatenated by a single space.

Note that s may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.

 

Example 1:

Input: s = "the sky is blue"
Output: "blue is sky the"
Example 2:

Input: s = "  hello world  "
Output: "world hello"
Explanation: Your reversed string should not contain leading or trailing spaces.
Example 3:

Input: s = "a good   example"
Output: "example good a"
Explanation: You need to reduce multiple spaces between two words to a single space in the reversed string.
 


code----->




class Solution {
public:
    string reverseWords(string s) {
    string sentence = s;
    stringstream ss(sentence);
    stack<string> words;
    string word;
    string result;

    // Store words in a stack
    while (ss >> word) {
        words.push(word);
    }

    // Print words in reverse order
   while (!words.empty()) {
            result += words.top();
            words.pop();
            if (!words.empty()) result += " "; // Add space between words
        }

        return result;
    }
};





note*********** this can be done by sorting-----> reverse(sentence.begin(), sentence.end());


