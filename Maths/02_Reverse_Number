


Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.

Assume the environment does not allow you to store 64-bit integers (signed or unsigned).

 

Example 1:

Input: x = 123
Output: 321
Example 2:

Input: x = -123
Output: -321
Example 3:

Input: x = 120
Output: 21
 

code----->>>



class Solution {
public:
    int reverse(int x) {
        int revnumber = 0;

        while (x != 0) {
            int lastdigit = x % 10;
            
            // Check for overflow before multiplying by 10
            if (revnumber > INT_MAX / 10 || (revnumber == INT_MAX / 10 && lastdigit > 7)) {
                return 0;
            }
            if (revnumber < INT_MIN / 10 || (revnumber == INT_MIN / 10 && lastdigit < -8)) {
                return 0;
            }
            
            revnumber = revnumber * 10 + lastdigit;
            x = x / 10;
        }

        return revnumber;
    }
};
