

Problem Statement: Given an integer N, return true it is an Armstrong number otherwise return false.

An Amrstrong number is a number that is equal to the sum of its own digits each raised to the power of the number of digits.

Examples
Example 1:
Input:N = 153
Output:True
Explanation: 13+53+33 = 1 + 125 + 27 = 153
Example 2:
Input:N = 371
Output: True
Explanation: 33+53+13 = 27 + 343 + 1 = 371








#include <iostream>
#include <vector>
#include <string>
#include <cmath> // for pow()

using namespace std;

int main() {
    int number = 153;
    int original = number;
    string str = to_string(number);

    int n = str.length();  // number of digits
    int result = 0;        // initialize to 0

    while (number != 0) {
        int last = number % 10;
        result += pow(last, n);  // add digit^n
        number /= 10;
    }

    if (result == original) {
        cout << "This number is an Armstrong number";
    } else {
        cout << "This number is not an Armstrong number";
    }

    return 0;
}
