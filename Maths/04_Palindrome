
Given an integer x, return true if x is a 
palindrome
, and false otherwise.

 

Example 1:

Input: x = 121
Output: true
Explanation: 121 reads as 121 from left to right and from right to left.
Example 2:

Input: x = -121
Output: false
Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.
Example 3:

Input: x = 10
Output: false
Explanation: Reads 01 from right to left. Therefore it is not a palindrome.
 


code--->



class Solution {
public:
    bool isPalindrome(int x) {
        
        int revnumber = 0;
        int temp=x;

        // Negative numbers are not palindromes
        if (x < 0) {
            return false;
        }

        while (x != 0) {
            int lastdigit = x % 10;
            
            // Check for overflow before multiplying by 10
            if (revnumber > INT_MAX / 10 || (revnumber == INT_MAX / 10 && lastdigit > 7)) {
                return 0;
            }
            if (revnumber < INT_MIN / 10 || (revnumber == INT_MIN / 10 && lastdigit < -8)) {
                return 0;
            }
            
            revnumber = revnumber * 10 + lastdigit;
            x = x / 10;
        }

if(temp==revnumber){
    return true;
}
else{
    return false;
}



    }
};
